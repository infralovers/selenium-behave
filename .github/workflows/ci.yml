name: ci

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches:
      - main

jobs:

  prebuild:
    runs-on: ubuntu-latest
    steps:
    - uses: go-semantic-release/action@v1
      id: semrel
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        prepend: true
        dry: true

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      if: github.event_name != 'pull_request' && steps.semrel.outputs.version != ''
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to Quay
      if: github.event_name != 'pull_request' && steps.semrel.outputs.version != ''
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USER }}
        password: ${{ secrets.QUAY_TOKEN }}


  build:
    strategy:
      matrix:
        baseimage: [ standalone-chrome, standalone-firefox, standalone-opera, standalone-edge]
        baseversion: [ 4 ]
    runs-on: ubuntu-latest
    needs: prebuild
    steps:
    - uses: actions/checkout@v2

    - name: Prepare tagging
      id: prep
      run: |
        IMAGE_NAME="${{ matrix.baseimage }}"
        IMAGE_REPO=${{ github.repository_owner }}
        if [[ -n "${{ secrets.IMAGE_NAME }}" ]]; then
          IMAGE_NAME="${{ secrets.IMAGE_NAME }}"
        fi
        if [[ -n "${{ secrets.IMAGE_REPO }}" ]]; then
          IMAGE_REPO="${{ secrets.IMAGE_REPO }}"
        fi
        HUB_IMAGE="$IMAGE_REPO/$IMAGE_NAME"
        QUAY_IMAGE="quay.io/$IMAGE_REPO/$IMAGE_NAME"
        VERSION="${{ matrix.baseversion}}-dev"
        if [[ '${{ needs.prebuild.semrel.outputs.version }}'  != '' ]]; then
          VERSION="${{ matrix.baseversion}}-${{ needs.prebuild.semrel.outputs.version }}"
        fi
        if [ "${{ github.event_name }}" = "schedule" ]; then
          VERSION="${{ matrix.baseversion}}-nightly"
        fi
        TAGS="${QUAY_IMAGE}:${VERSION},${HUB_IMAGE}:${VERSION}"
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS,${QUAY_IMAGE}:latest,${HUB_IMAGE}:latest"
        fi
        echo ::set-output name=tags::${TAGS}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v3
      with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' && needs.prebuild.semrel.outputs.version != '' }}
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            SELENIUM_BASE=docker.io/selenium/${{ matrix.baseimage }}:${{ matrix.baseversion }}

    - name: Update changelog
      uses: stefanzweifel/git-auto-commit-action@v4
      if: github.event_name != 'pull_request' && needs.prebuild.semrel.outputs.version != ''
      with:
        commit_message: 'chore(ci): commit changes from go-semantic-release'
        file_pattern: CHANGELOG.md

  release:
    needs: [ prebuild, build ]
    runs-on: ubuntu-latest
    steps:
    - uses: go-semantic-release/action@v1
      if: github.event_name != 'pull_request' && needs.prebuild.semrel.outputs.version != ''
      id: semrel
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        prepend: true
        changelog-file: CHANGELOG.md
